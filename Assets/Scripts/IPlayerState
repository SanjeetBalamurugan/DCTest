public interface IPlayerState
{
    void Enter(PlayerStateManager player);
    void Exit();
    void Update();
    void HandleInput();
}

public class IdleState : IPlayerState
{
    private PlayerStateManager player;

    public void Enter(PlayerStateManager player)
    {
        this.player = player;
        player.GetAnimator().SetBool("IsMoving", false);
    }

    public void Exit() {}

    public void Update() {}

    public void HandleInput()
    {
        if (Input.GetAxis("Horizontal") != 0 || Input.GetAxis("Vertical") != 0)
        {
            player.SetState(new MoveState());
        }
        if (Input.GetButtonDown("Fire1"))
        {
            player.SetState(new CombatState());
        }
    }
}

public class MoveState : IPlayerState
{
    private PlayerStateManager player;
    private float targetX = 0f;
    private float targetY = 0f;
    private float currentX = 0f;
    private float currentY = 0f;
    private float smoothing = 0.03f;
    private float runningSmoothing = 0.03f;
    private bool shiftHeldBeforeMovement = false;

    public void Enter(PlayerStateManager player)
    {
        this.player = player;
        player.animator.SetBool("IsMoving", true);
    }

    public void Exit()
    {
        player.animator.SetBool("IsMoving", false);
    }

    public void Update()
    {
        HandleMovementInput();
        UpdateAnimator();
        shiftHeldBeforeMovement = Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift);
    }

    public void HandleInput()
    {
        if (Input.GetAxis("Horizontal") == 0 && Input.GetAxis("Vertical") == 0)
        {
            player.SetState(new IdleState());
        }
        if (Input.GetButtonDown("Fire1"))
        {
            player.SetState(new CombatState());
        }
    }

    private void HandleMovementInput()
    {
        bool isRunning = Input.GetKey(KeyCode.LeftShift) || Input.GetKey(KeyCode.RightShift);
        float currentSmoothing = isRunning ? runningSmoothing : smoothing;

        targetX = 0f;
        targetY = 0f;

        if (Input.GetKey(KeyCode.W))
        {
            targetY = isRunning ? 1f : 0.5f;
        }
        else if (Input.GetKey(KeyCode.S))
        {
            targetY = isRunning ? -1f : -0.5f;
        }

        if (Input.GetKey(KeyCode.A))
        {
            targetX = isRunning ? -1f : -0.5f;
        }
        else if (Input.GetKey(KeyCode.D))
        {
            targetX = isRunning ? 1f : 0.5f;
        }

        currentX = Mathf.Lerp(currentX, targetX, currentSmoothing);
        currentY = Mathf.Lerp(currentY, targetY, currentSmoothing);
    }

    private void UpdateAnimator()
    {
        player.animator.SetFloat("x", currentX);
        player.animator.SetFloat("y", currentY);
    }
}


public class CombatState : IPlayerState
{
    private PlayerStateManager player;

    public void Enter(PlayerStateManager player)
    {
        this.player = player;
        player.GetAnimator().SetTrigger("Attack");
        player.GetCombatSystem().StartCombo();
    }

    public void Exit() {}

    public void Update() {}

    public void HandleInput()
    {
        if (Input.GetButtonDown("Fire1"))
        {
            player.GetCombatSystem().LightAttack();
        }
        if (Input.GetButtonDown("Fire2"))
        {
            player.GetCombatSystem().HeavyAttack();
        }

        if (player.GetAnimator().GetCurrentAnimatorStateInfo(0).IsName("AttackFinish"))
        {
            player.SetState(new IdleState());
        }
    }
}

